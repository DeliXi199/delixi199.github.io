---
interface Item { title: string; url: string; image?: string; desc?: string; content?: string; }
interface Subcategory { name: string; type: 'movie'|'website'|'bookmark'|'book'; items: Item[] }
interface Category { name: string; subcategories: Subcategory[] }

const { categories } = Astro.props as { categories: Category[] };

// 把名字转成 id（小写，空格换-）
const generateId = (text: string): string =>
  text.replace(/\s+/g, '-').toLowerCase();
---
<div class="categories">
  {categories.map((category, catIndex) => (
    <div class="category" id={`category-${catIndex}`}>
      <h2
        id={`cat-title-${catIndex}`}
        class="category-title"
        onclick={`toggleCategory(${catIndex})`}
      >
        <span>{category.name}</span>
        <span class="arrow" id={`cat-arrow-${catIndex}`}>&#9660;</span>
      </h2>

      <div class="collapsible open" id={`wrapper-${catIndex}`}>
        <div class="subcategories" id={`subcategories-${catIndex}`}>
          {category.subcategories.map((sub, subIndex) => (
            <div class="subcategory" id={`subcategory-${catIndex}-${subIndex}`}>
              <h3
                class="subcategory-title"
                id={generateId(sub.name)}
                onclick={`toggleSubcategory(${catIndex}, ${subIndex})`}
              >
                <span>{sub.name}</span>
                <span class="arrow" id={`subcat-arrow-${catIndex}-${subIndex}`}>&#9660;</span>
              </h3>

              <div class="collapsible" id={`wrapper-${catIndex}-${subIndex}`}>
                <div
                  class={
                    sub.type === 'movie'
                      ? 'movie-grid'
                      : (sub.type === 'website' || sub.type === 'bookmark')
                      ? 'bookmark-grid'
                      : sub.type === 'book'
                      ? 'movie-grid'
                      : ''
                  }
                  id={`grid-${catIndex}-${subIndex}`}
                >
                  {sub.items.map((item) =>
                    sub.type === 'movie' ? (
                      <div class="movie-card">
                        <a href={item.url} target="_blank" class="movie-poster">
                          <img src={item.image} alt={item.title} class="movie-image" />
                          {item.desc && (
                            <div class="movie-desc-overlay"><p>{item.desc}</p></div>
                          )}
                        </a>
                        <a href={item.url} target="_blank" class="movie-title-link">
                          {item.title}
                        </a>
                      </div>
                    ) : sub.type === 'website' ? (
                      <div class="bookmark-card">
                        <a href={item.url} target="_blank" class="image-wrapper">
                          <img src={item.image} alt={item.title} class="card-image" />
                          <div class="card-desc"><p>{item.desc}</p></div>
                        </a>
                        <a href={item.url} target="_blank" class="card-title">
                          {item.title}
                        </a>
                      </div>
                    ) : sub.type === 'book' ? (
                      <div
                        class="movie-card book-card"
                        onclick={`openOverlay(${JSON.stringify(item.content)})`}
                        style="cursor:pointer;"
                      >
                        <div class="movie-poster">
                          <img src={item.image} alt={item.title} class="movie-image" />
                        </div>
                        <div class="movie-title-link">{item.title}</div>
                      </div>
                    ) : null
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  ))}
</div>

<!-- —— 模态弹窗：放在你折叠列表代码之后 —— -->
<div
  id="book-overlay"
  class="overlay"
  onclick="closeOverlay()"
>
  <div
    class="overlay-content"
    onclick="event.stopPropagation()"
  >
    <button class="close-btn" onclick="closeOverlay()">×</button>
    <div id="overlay-text" class="overlay-text"></div>
  </div>
</div>

<script is:inline>
  // 折叠逻辑
  function toggleCollapse(wrapper, arrow) {
    if (!wrapper) return;
    const isOpen = wrapper.classList.contains('open');
    wrapper.removeEventListener('transitionend', wrapper._afterExpand);
    if (isOpen) {
      const curH = wrapper.scrollHeight + 'px';
      wrapper.style.maxHeight = curH;
      requestAnimationFrame(() => (wrapper.style.maxHeight = '0px'));
      wrapper.classList.remove('open');
      arrow.style.transform = 'rotate(-90deg)';
    } else {
      wrapper.style.maxHeight = 'none';
      wrapper.style.visibility = 'hidden';
      const fullH = wrapper.scrollHeight + 'px';
      wrapper.style.maxHeight = '0px';
      wrapper.style.visibility = '';
      wrapper.classList.add('open');
      arrow.style.transform = 'rotate(0deg)';
      wrapper.getBoundingClientRect();
      wrapper.style.maxHeight = fullH;
      wrapper._afterExpand = (e) => {
        if (e.target === wrapper && wrapper.classList.contains('open')) {
          wrapper.style.maxHeight = 'none';
          wrapper.removeEventListener('transitionend', wrapper._afterExpand);
        }
      };
      wrapper.addEventListener('transitionend', wrapper._afterExpand);
    }
  }

  function toggleCategory(i) {
    const wrapper = document.getElementById(`wrapper-${i}`);
    const arrow = document.getElementById(`cat-arrow-${i}`);
    const header = document.getElementById(`cat-title-${i}`);
    toggleCollapse(wrapper, arrow);
    header.classList.toggle('active');
  }

  function toggleSubcategory(i, j) {
    const wrapper = document.getElementById(`wrapper-${i}-${j}`);
    const arrow = document.getElementById(`subcat-arrow-${i}-${j}`);
    toggleCollapse(wrapper, arrow);
  }

  function expandToHash() {
    const hash = location.hash.slice(1);
    if (!hash) return;
    const target = document.getElementById(hash);
    if (!target) return;
    const catDiv = target.closest('.category');
    if (catDiv) {
      const idx = +catDiv.id.split('-')[1];
      const w = catDiv.querySelector(':scope > .collapsible');
      const a = document.getElementById(`cat-arrow-${idx}`);
      const h = document.getElementById(`cat-title-${idx}`);
      if (w && !w.classList.contains('open')) {
        toggleCollapse(w, a);
        h.classList.add('active');
      }
    }
    const subDiv = target.closest('.subcategory');
    if (subDiv) {
      const [_, ci, si] = subDiv.id.split('-').map(Number);
      const w = document.getElementById(`wrapper-${ci}-${si}`);
      const a = document.getElementById(`subcat-arrow-${ci}-${si}`);
      if (w && !w.classList.contains('open')) toggleCollapse(w, a);
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    expandToHash();
    window.addEventListener('hashchange', expandToHash);
  });
  // 页面加载后把 overlay 挪到 body 底下
  document.addEventListener("DOMContentLoaded", () => {
    const overlay = document.getElementById("book-overlay");
    document.body.appendChild(overlay);
  });

  // 打开弹窗：把文本按空行分段为 <p>
  function openOverlay(text) {
    const html = text
      .trim()
      .split(/\n\s*\n/)        // 空行分段
      .map(para => `<p>${para.trim()}</p>`)
      .join("");
    document.getElementById("overlay-text").innerHTML = html;
    document.getElementById("book-overlay").classList.add("open");
  }

  // 关闭弹窗
  function closeOverlay() {
    document.getElementById("book-overlay").classList.remove("open");
  }

  // 暴露到全局，方便卡片 onclick 调用
  window.openOverlay = openOverlay;
  window.closeOverlay = closeOverlay;
</script>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap');

  .categories {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 2rem 0;
    font-family: system-ui, sans-serif;
  }

  /* 折叠容器 */
  .collapsible {
    overflow: hidden;
    max-height: none;
    transition: max-height 0.4s ease;
    width: 100%;
  }
  .collapsible:not(.open) {
    max-height: 0;
  }

  /* 一级标题 */
  .category-title {
    font-weight: 700;
    padding: 1rem 1.2rem;
    border-radius: 14px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 2rem;
    background: linear-gradient(to right, #dee4ea, #f7f9fb);
    color: #1a1a1a;
    box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    cursor: pointer;
    transition: background 0.3s, box-shadow 0.3s, color 0.3s;
  }
  .category-title.active {
    color: #0070f3;
  }
  .category-title:hover {
    background: linear-gradient(to right, #d0d9e0, #eff2f6);
    box-shadow: 0 4px 10px rgba(0,0,0,0.08);
    color: #0070f3;
  }

  /* 二级标题 */
  .subcategory {
    margin-top: 1.5rem;
    padding-left: 1rem;
    display: flex;
    flex-direction: column;
  }
  .subcategory-title {
    font-weight: 600;
    padding: 0.8rem 1rem;
    border-radius: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.4rem;
    background: linear-gradient(to right, #f2f4f7, #ffffff);
    color: #2c3e50;
    box-shadow: 0 1px 4px rgba(0,0,0,0.04);
    cursor: pointer;
    transition: background 0.3s, color 0.3s;
  }
  .subcategory-title:hover {
    background: linear-gradient(to right, #e4e7ec, #fafbfc);
    color: #0056cc;
  }

  /* 箭头 */
  .arrow {
    font-size: 1.2rem;
    transition: transform 0.3s;
    color: #888;
  }

  /* 网站卡片 Bookmark */
  .bookmark-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 0.5rem;
    justify-content: flex-start;
  }
  .bookmark-card {
    width: calc((100% - 3rem) / 4);
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
    border-radius: 12px;
    background: #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    transition: transform 0.25s ease, box-shadow 0.25s ease;
  }
  .bookmark-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 14px rgba(0,0,0,0.08);
  }
  .image-wrapper {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 100%;
    overflow: hidden;
  }
  .card-image {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease;
  }
  .bookmark-card:hover .card-image {
    transform: scale(1.04);
  }
  .card-desc {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.5);
    color: white;
    opacity: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.8rem;
    transition: opacity 0.4s ease;
  }
  .image-wrapper:hover .card-desc {
    opacity: 1;
  }
  .card-title {
    display: block;
    width: 100%;
    padding: 0.6rem 0.4rem;
    text-align: center;
    font-weight: 600;
    font-size: 1rem;
    background: #fff;
    border-radius: 0 0 12px 12px;
    transition: background 0.3s ease;
    color: #2c3e50;
    text-decoration: none;
  }
  .card-title:hover {
    background: #f0f0f0;
    text-decoration: underline;
  }

  /* 电影卡片 Movie */
  .movie-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 0.5rem;
    justify-content: flex-start;
  }
  .movie-card {
    width: calc((100% - 3rem) / 4);
    display: flex;
    flex-direction: column;
    background: #fff;
    border-radius: 12px;
    overflow: hidden;
    text-align: center;
    transition: transform 0.25s ease, box-shadow 0.25s ease;
    cursor: pointer;
    margin-bottom: 1rem;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    position: relative;
  }
  .movie-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 14px rgba(0,0,0,0.08);
  }
  .movie-poster {
    width: 100%;
    aspect-ratio: 2/3;
    overflow: hidden;
    position: relative;
  }
  .movie-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
    transition: transform 0.4s ease;
  }
  .movie-card:hover .movie-image {
    transform: scale(1.04);
  }
  .movie-desc-overlay {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.5);
    color: white;
    opacity: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.8rem;
    transition: opacity 0.4s ease;
  }
  .movie-poster:hover .movie-desc-overlay {
    opacity: 1;
  }
  .movie-title-link {
    display: block;
    width: 100%;
    padding: 0.6rem 0.4rem;
    text-align: center;
    font-weight: 600;
    font-size: 1rem;
    background: #fff;
    border-radius: 0 0 12px 12px;
    transition: background 0.3s ease;
    color: #2c3e50;
    text-decoration: none;
  }
  .movie-title-link:hover {
    background: #f0f0f0;
    text-decoration: underline;
  }

  /* TOC 高亮 */
  .toc-link.active {
    color: #0070f3;
    font-weight: bold;
    border-left: 3px solid #0070f3;
    padding-left: 0.5rem;
  }

/* —— 遮罩层 —— */
.overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.6);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }
  .overlay.open {
    display: flex;
  }

  /* —— 弹窗内容 —— */
  @keyframes fadeInModal {
    from { opacity: 0; transform: translate(-50%, -52%); }
    to   { opacity: 1; transform: translate(-50%, -50%); }
  }
  .overlay-content {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 700px;
    max-width: 90vw;
    max-height: 80vh;
    background: #fdf8f0;
    padding: 3rem 2.5rem 2.5rem;
    border-radius: 12px;
    border: 1px solid #d4c9b0;
    border-left: 6px solid #b0905f;
    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.25);
    overflow-y: auto;
    font-family: 'Dancing Script', cursive;
    color: #333;
    line-height: 1.7;
    font-size: 1.25rem;             /* 正文字号调大 */
    animation: fadeInModal 0.3s ease-out;
  }

  /* —— 引号装饰 —— */
  .overlay-content::before,
  .overlay-content::after {
    color: #b0905f;
    font-family: Georgia, serif;
    font-size: 4rem;
    line-height: 1;
    pointer-events: none;
  }
  .overlay-content::before {
    content: "“";
    top: 1.5rem;
    left: 1.5rem;
  }
  .overlay-content::after {
    content: "”";
    bottom: 1.5rem;
    right: 1.5rem;
  }

  /* —— 段落文本 —— */
  .overlay-text {
    white-space: pre-wrap;
    text-transform: uppercase;      /* 全部大写 */
  }
  /* 第一段不缩进 */
  .overlay-text p:first-of-type {
    text-indent: 0;
    margin-top: 0;
  }
  /* 其余段落缩 2 字符 */
  .overlay-text p + p {
    margin-top: 1.2em;
    text-indent: 2em;
  }
  /* 大型落款首字 */
  .overlay-text::first-letter {
    float: left;
    font-size: 3.5rem;
    line-height: 1;
    margin-right: 0.3rem;
    color: #b0905f;
  }

  /* —— 自定义滚动条 —— */
  .overlay-content::-webkit-scrollbar {
    width: 8px;
  }
  .overlay-content::-webkit-scrollbar-track {
    background: #f4eee3;
    border-radius: 4px;
  }
  .overlay-content::-webkit-scrollbar-thumb {
    background: #b0905f;
    border-radius: 4px;
  }
  .overlay-content::-webkit-scrollbar-thumb:hover {
    background: #9a774b;
  }

  /* —— 关闭按钮 —— */
  .close-btn {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: transparent;
    border: none;
    font-size: 1.5rem;
    color: #666;
    cursor: pointer;
    transition: color 0.2s ease;
  }
  .close-btn:hover {
    color: #000;
  }
</style>